<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE mapper
        PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
        'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>
<mapper namespace='com.happyjob.jobfolio.repository.admin.AdminCommunityMapper'>

    <!-- 공지사항 등록 -->
    <insert id="insertBoard" parameterType="com.happyjob.jobfolio.vo.community.CommunityBoardVo">
        INSERT INTO tb_board
        (board_type,
        title,
        content,
        write_date,
        author,
        priority,
        status_yn)
        VALUES
        (#{boardType},
        #{title},
        #{content},
        NOW(),
        #{author},
        #{priority},
        #{statusYn})
        <selectKey keyProperty="boardNo" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!-- 공지사항 수정 -->
    <update id="updateBoard" parameterType="com.happyjob.jobfolio.vo.community.CommunityBoardVo">
        UPDATE tb_board
        SET
            title = #{title},
            content = #{content},
            priority = #{priority}
        WHERE board_no = #{boardNo}
    </update>

    <!-- 수정시 파일  -->
    <delete id="deleteFileInfoByBoardNoAndFilename">
        DELETE FROM tb_file_info
        WHERE board_no = #{boardNo}
          AND file_lopath LIKE CONCAT('%', #{filename})
    </delete>

    <!-- 공지사항 삭제 -->
    <delete id="deleteBoard" parameterType="int">
        DELETE FROM tb_board
        WHERE board_no = #{boardNo}
    </delete>

    <!--  공지사항 일괄 삭제  -->
    <delete id="deleteBoardBatch" parameterType="list">
        DELETE FROM tb_board
        WHERE board_no IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 파일정보 단건 저장 -->
    <insert id="insertFileInfo" parameterType="com.happyjob.jobfolio.vo.community.FileInfoVo">
        INSERT INTO tb_file_info
            (file_name, board_no, file_pypath, file_lopath, extension)
        VALUES
            (#{fileName}, #{boardNo}, #{filePypath}, #{fileLopath}, #{extension})
    </insert>

    <!-- 파일정보 일괄 저장 -->
    <insert id="insertFileInfoBatch">
        <foreach collection="list" item="file" separator=";">
            INSERT INTO tb_file_info
            (file_name, board_no, file_pypath, file_lopath, extension)
            VALUES
            (#{file.fileName}, #{file.boardNo},
            #{file.filePypath}, #{file.fileLopath},
            #{file.extension})
        </foreach>
    </insert>

    <!-- 파일정보 조회 -->
    <select id="selectFileInfoByBoardNo"
            parameterType="int"
            resultType="com.happyjob.jobfolio.vo.community.FileInfoVo">
        SELECT file_name   AS fileName,
               board_no    AS boardNo,
               file_pypath AS filePypath,
               file_lopath AS fileLopath,
               extension
        FROM tb_file_info
        WHERE board_no = #{boardNo}
    </select>

    <!-- 파일정보 삭제 -->
    <delete id="deleteFileInfoByBoardNo" parameterType="int">
        DELETE FROM tb_file_info
        WHERE board_no = #{boardNo}
    </delete>

    <delete id="deleteFileInfoByFilename">
        DELETE FROM tb_file_info
        WHERE file_name = #{fileName}
    </delete>

    <!-- 우선순위 조회 -->
    <select id="selectPriority" parameterType="int" resultType="int">
        SELECT priority
        FROM tb_board
        WHERE board_no = #{boardNo}
    </select>

    <!--  우선순위 변경  -->
    <update id="updatePriority">
        UPDATE tb_board
        SET priority = #{priority}
        WHERE board_no = #{boardNo}
    </update>

    <!-- 우선순위 일괄 변경 -->
    <update id="updatePriorityBatch">
        <foreach collection="updates" item="item" separator=";">
            UPDATE tb_board
            SET priority = #{item.priority}
            WHERE board_no = #{item.boardNo}
        </foreach>
    </update>

    <!--  공지 고정 해제  -->
    <update id="unpinBoardList">
        UPDATE tb_board
        SET priority = 0
        WHERE board_no IN
        <foreach collection="boardNos" item="boardNo" open="(" separator="," close=")">
            #{boardNo}
        </foreach>
    </update>

    <!--  공개/비공개 토글  -->
    <update id="updateStatusYn">
        UPDATE tb_board
        SET status_yn = #{statusYn}
        WHERE board_no = #{boardNo}
    </update>

</mapper>
